MI <- read.csv("minh_optimarevised.csv")
View(MI)
install.packages("sqldf")
library(sqldf)
install.packages("stringr")
install.packages("plyr")
source('~/.active-rstudio-document', echo=TRUE)
library(sqldf)
library(plyr)
MI <- read.csv("minh_optimarevised.csv")
n.MI <- names(MI)
str(MI)
vars.MI <- str(MI)
MI <- read.csv("minh_optimarevised.csv", stringsAsFactors=FALSE)
n.MI <- names(MI)
str(MI)
dat <- read.csv("minh_optimarevised_original.csv")
View(dat)
red.dat <- dat[vars]
vars <- c("hypothyroid", "age", "stemi", "mi", "femal", "weight", "race", "activesmoker", "asa", "antiplatelet", "antiplateletintravenous", "baselinecreat", "peakcreatinine", "baselinehemoglobin", "nadirhemoglobin", "baselineplatelets", "baselineldl", "baselinehdl", "typeoftrop", "troppeak", "ejectionfraction", "cath", "diseasedarteries", "angioplasty", "number ofstents", "INHOSPCABG", "shock", "stroke", "mechanicalventilation", "chf", "cardiogenicshock", "ventriculararrythmia", "atrialfibrillation", "bradyarrythmia", "arrrythmia", "cardiacarrest", "timibleed", "gibleed", "infection", "death", "diabetes", "hypertension", "priorpci", "priorrevasc", "priorcabg", "priorcvatia", "antiplateletondischarge", "bbprescribed", "statinsprescribed", "aceinhibitorprescribed", "arbprescribed", "cablocker", "hopsital")
red.dat <- dat[vars]
names(dat)
for(v in vars){
dat[v]
}
for(v in vars){
v
}
for(v in vars){
dat[v]
}
for(v in vars){
print(v)
}
for(v in vars){
print(v)
dat[v]
}
names(dat)
vars <- c("hypothyroid", "age", "stemi", "mi", "femal", "weight", "race", "activesmoker", "asa", "antiplatelet", "antiplateletintravenous", "baselinecreat", "peakcreatinine", "baselinehemoglobin", "nadirhemoglobin", "baselineplatelets", "baselineldl", "baselinehdl", "typeoftrop", "troppeak", "ejectionfraction", "cath", "diseasedarteries", "angioplasty", "number.ofstents", "INHOSPCABG", "shock", "stroke", "mechanicalventilation", "chf", "cardiogenicshock", "ventriculararrythmia", "atrialfibrillation", "bradyarrythmia", "arrrythmia", "cardiacarrest", "timibleed", "gibleed", "infection", "death", "diabetes", "hypertension", "priorpci", "priorrevasc", "priorcabg", "priorcvatia", "antiplateletondischarge", "bbprescribed", "statinsprescribed", "aceinhibitorprescribed", "arbprescribed", "cablocker", "hopsital",)
vars <- c("hypothyroid", "age", "stemi", "mi", "femal", "weight", "race", "activesmoker", "asa", "antiplatelet", "antiplateletintravenous", "baselinecreat", "peakcreatinine", "baselinehemoglobin", "nadirhemoglobin", "baselineplatelets", "baselineldl", "baselinehdl", "typeoftrop", "troppeak", "ejectionfraction", "cath", "diseasedarteries", "angioplasty", "number.ofstents", "INHOSPCABG", "shock", "stroke", "mechanicalventilation", "chf", "cardiogenicshock", "ventriculararrythmia", "atrialfibrillation", "bradyarrythmia", "arrrythmia", "cardiacarrest", "timibleed", "gibleed", "infection", "death", "diabetes", "hypertension", "priorpci", "priorrevasc", "priorcabg", "priorcvatia", "antiplateletondischarge", "bbprescribed", "statinsprescribed", "aceinhibitorprescribed", "arbprescribed", "cablocker", "hopsital")
names(dat)
for(v in vars){
print(v)
dat[v]
}
red.dat <- dat[vars]
write.csv(red.dat, file="output.csv")
write.csv(red.dat, file="output1.csv")
write.csv(red.dat, file="output1.csv", col.names=FALSE)
red.dat.ind <- data.frame(model.matrix(~race-1))
red.dat.ind <- data.frame(model.matrix(~red.dat-1))
red.dat.ind <- data.frame(model.matrix(~ race-1, data=red.dat))
View(red.dat.ind)
View(red.dat.ind)
red.dat.recod <- apply(red.dat, 2, function(x) {x[x == "YES"] <- 1; x})
View(red.dat.recod)
View(red.dat.ind)
rm(red.dat.rod)
rm(red.dat.recod)
red.dat.recod1 <- apply(red.dat, 2, function(x) {x[x == "YES"] <- 1; x})
red.dat.recod2 <- apply(red.dat.recod1, 2, function(x) {x[x == "YES"] <- 1; x})
View(red.dat.recod2)
red.dat.recod1 <- apply(red.dat, 2, function(x) {x[x == "YES"] <- 1; x})
red.dat.recod2 <- apply(red.dat.recod1, 2, function(x) {x[x == "NO"] <- 0; x})
require(plyr)
red.dat.recod1 <- data.frame(apply(red.dat, 2, function(x) {x[x == "YES"] <- 1; x}))
red.dat.recod2 <- data.frame(apply(red.dat.recod1, 2, function(x) {x[x == "NO"] <- 0; x}))
View(red.dat.recod2)
red.dat.recod3 <- data.frame(apply(red.dat.recod2, 2, function(x) {x[x == "UNK"||x == "UNKNOWN"] <- NA; x}))
View(red.dat.recod3)
red.dat.recod3 <- data.frame(apply(red.dat.recod2, 2, function(x) {x[x == "UNKNOWN"] <- NA; x}))
View(red.dat.recod3)
red.dat.recod3 <- data.frame(apply(red.dat.recod2, 2, function(x) {x[x == "UNK"] <- NA; x}))
red.dat.recod3 <- data.frame(apply(red.dat.recod2, 2, function(x) {x[x == "UNKNOWN"] <- NA; x}))
red.dat.recod4 <- data.frame(apply(red.dat.recod3, 2, function(x) {x[x == "UNK"] <- NA; x}))
View(red.dat.recod4)
red.dat.recod4 <- data.frame(apply(red.dat.recod3, 2, function(x) {x[x == "ND"] <- NA; x}))
red.dat.recod4 <- data.frame(apply(red.dat.recod3, 2, function(x) {x[x == "UNK"] <- NA; x}))
red.dat.recod5 <- data.frame(apply(red.dat.recod4, 2, function(x) {x[x == "ND"] <- NA; x}))
dat <- read.csv("minh_optimarevised_original.csv", header = T, na.strings=c(""," ","NA", "UNK", "UNKNOWN", "ND"))
vars <- c("hypothyroid", "age", "stemi", "mi", "femal", "weight", "race", "activesmoker", "asa", "antiplatelet", "antiplateletintravenous", "baselinecreat", "peakcreatinine", "baselinehemoglobin", "nadirhemoglobin", "baselineplatelets", "baselineldl", "baselinehdl", "typeoftrop", "troppeak", "ejectionfraction", "cath", "diseasedarteries", "angioplasty", "number.ofstents", "INHOSPCABG", "shock", "stroke", "mechanicalventilation", "chf", "cardiogenicshock", "ventriculararrythmia", "atrialfibrillation", "bradyarrythmia", "arrrythmia", "cardiacarrest", "timibleed", "gibleed", "infection", "death", "diabetes", "hypertension", "priorpci", "priorrevasc", "priorcabg", "priorcvatia", "antiplateletondischarge", "bbprescribed", "statinsprescribed", "aceinhibitorprescribed", "arbprescribed", "cablocker", "hopsital")
#prints the names
names(dat)
#makes sure all the names match up
for(v in vars){
print(v)
dat[v]
}
#STEP 1 - keep required variables
red.dat <- dat[vars]
write.csv(red.dat, file="output1.csv")
write.csv(red.dat, file="output1.csv")
red.dat.recod1 <- data.frame(apply(red.dat, 2, function(x) {x[x == "YES"] <- 1; x}))
red.dat.recod2 <- data.frame(apply(red.dat.recod1, 2, function(x) {x[x == "NO"] <- 0; x}))
red.dat.recod1 <- data.frame(apply(red.dat, 2, function(x) {x[x == "YES"] <- 1; x}))
red.dat.recod2 <- data.frame(apply(red.dat.recod1, 2, function(x) {x[x == "NO"] <- 0; x}))
red.dat.recod3 <- data.frame(apply(red.dat.recod2, 2, function(x) {x[x == NA] <- -1; x}))
View(red.dat.recod3)
red.dat.recod3 <- data.frame(apply(red.dat.recod2, 2, function(x) {x[is.na(x)] <- -1; x}))
View(red.dat.recod3)
write.csv(red.dat.recod2, file="output2.csv")
red.dat.recod2$diseasedarteries - red.dat.recod2$diseasedarteries[is.na(red.dat.recod2$diseasedarteries)] <- 0; 1
red.dat.recod2$diseasedarteries <- red.dat.recod2$diseasedarteries[is.na(red.dat.recod2$diseasedarteries)] <- 0; 1
red.dat.recod2 <- data.frame(apply(red.dat.recod1, 2, function(x) {x[x == "NO"] <- 0; x}))
red.dat.recod2$diseasedarteries <- data.frame(red.dat.recod2$diseasedarteries, 2, function(x) {x[is.na(x)] <- 0; 1}))
red.dat.recod2$diseasedarteries <- data.frame(red.dat.recod2$diseasedarteries, 2, function(x) {x[is.na(x)] <- 0; 1})
red.dat.recod2$diseasedarteries[is.na(red.dat.recod2$diseasedarteries)] <- 0
View(red.dat.recod2)
red.dat.recod2$diseasedarteries[!is.na(red.dat.recod2$diseasedarteries)] <- 1
red.dat.recod2$diseasedarteries01[!is.na(red.dat.recod2$diseasedarteries)] <- 1
red.dat.recod2$diseasedarteries01[!is.na(red.dat.recod2$diseasedarteries)] <- 1; 0
source('~/.active-rstudio-document', echo=TRUE)
red.dat.recod2$diseasedarteries01 <- 0
red.dat.recod2$diseasedarteries01[!is.na(red.dat.recod2$diseasedarteries)] <- 1
View(red.dat.recod2)
red.dat.recod3 <- subset(red.dat.recod2, select = -c(diseasedarteries))
red.dat.recod2$diseasedarteries01 <- 0
red.dat.recod2$diseasedarteries01[!is.na(red.dat.recod2$diseasedarteries)] <- 1
red.dat.recod3 <- subset(red.dat.recod2, select = -c(diseasedarteries))
View(red.dat.recod3)
red.dat.ind <- data.frame(model.matrix(~.-1, data=red.dat.recod3))
red.dat.ind <- data.frame(model.matrix(~race + hospital -1, data=red.dat.recod3))
names(red.dat)[names(red.dat) == "hopsital"] ,_ "hospital"
names(red.dat)[names(red.dat) == "hopsital"] <- "hospital"
write.csv(red.dat, file="output1.csv")
#STEP 2 - turn yes no into 1, 0
red.dat.recod1 <- data.frame(apply(red.dat, 2, function(x) {x[x == "YES"] <- 1; x}))
red.dat.recod2 <- data.frame(apply(red.dat.recod1, 2, function(x) {x[x == "NO"] <- 0; x}))
#STEP 3 - turn diseased arteries into 1, 0
red.dat.recod2$diseasedarteries01 <- 0
red.dat.recod2$diseasedarteries01[!is.na(red.dat.recod2$diseasedarteries)] <- 1
red.dat.recod3 <- subset(red.dat.recod2, select = -c(diseasedarteries))
write.csv(red.dat.recod3, file="output2.csv")
#STEP 4 - turn factors into indicators
red.dat.ind <- data.frame(model.matrix(~race + hopsital -1, data=red.dat.recod3))
red.dat.ind <- data.frame(model.matrix(~race + hospital -1, data=red.dat.recod3))
View(red.dat.ind)
red.dat.race,ind <- data.frame(model.matrix(~race -1, data=red.dat.recod3))
red.dat.race.ind <- data.frame(model.matrix(~race -1, data=red.dat.recod3))
red.dat.race.hosp <- data.frame(model.matrix(~hospital -1, data=red.dat.recod3))
View(red.dat.race.hosp)
View(red.dat.race.ind)
red.dat.recod3$row.names <- 1:nrow(red.dat.recod3)
View(red.dat.recod3)
require(SQLDF)
install.packages("sqldf")
red.dat.ind <- merge(x= red.dat.recod3 , y =  red.dat.race.ind , by="row.names", all.x=TRUE)
red.dat.ind <- merge(x = red.dat.recod3, y = red.dat.race.ind, by = "row.names", all.x=TRUE)
red.dat.ind <- merge(x = red.dat.recod3, y = red.dat.race.ind, by = row.names, all.x=TRUE)
red.dat.ind <- merge(x = red.dat.recod3, y = red.dat.race.ind, by = "row.names", all.x=TRUE)
names(red.dat.race.ind)
row.names(red.dat.race.ind)
red.dat.race.ind <- data.frame(model.matrix(~race -1, data=red.dat.recod3))
red.dat.race.ind$row.names <- row.names(red.dat.race.ind)
red.dat.recod3$row.names <- 1:nrow(red.dat.recod3)
View(red.dat.ind)
View(red.dat.race.ind)
View(red.dat.recod3)
red.dat.recod3 <- subset(red.dat.recod2, select = -c(diseasedarteries))
red.dat.recod3$row.names.1 <- 1:nrow(red.dat.recod3)
red.dat.ind <- merge(x = red.dat.recod3, y = red.dat.race.ind, by = "row.names.1", all.x=TRUE)
View(red.dat.race.ind)
red.dat.recod3$row.names.1 <- 1:nrow(red.dat.recod3)
red.dat.race.ind$row.names.1 <- row.names(red.dat.race.ind)
red.dat.recod3$row.names.1 <- 1:nrow(red.dat.recod3)
View(red.dat.race.ind)
red.dat.race.ind <- data.frame(model.matrix(~race -1, data=red.dat.recod3))
red.dat.race.ind$row.names.1 <- row.names(red.dat.race.ind)
red.dat.recod3$row.names.1 <- 1:nrow(red.dat.recod3)
View(red.dat.race.ind)
View(red.dat.recod3)
red.dat.ind <- merge(x = red.dat.recod3, y = red.dat.race.ind, by = "row.names.1", all.x=TRUE)
View(red.dat.ind)
red.dat.ind <- subset(red.dat.ind , select = -c(row.names.1, race))
View(red.dat.ind)
dat.final <- data.frame(apply(red.dat.ind, 2, function(x) {x[is.na(x)] <- -1; x}))
View(dat.final)
source('~/.active-rstudio-document', echo=TRUE)
write.csv(red.dat.recod3, file="outputFinal.csv")
write.csv(dat.final, file="outputFinal.csv")
red.dat.recod3$typeoftrop <- revalue(red.dat.recod3$typeoftrop, c("T"=1,
"0"=0))
red.dat.recod3$typeoftrop <- revalue(red.dat.recod3$typeoftrop, c("T"=1,
"I"=0))
red.dat.recod3 <- subset(red.dat.recod2, select = -c(diseasedarteries))
red.dat.recod3$typeoftrop <- revalue(red.dat.recod3$typeoftrop, c("T"=1,
"I"=0))
View(red.dat.recod3)
source('~/.active-rstudio-document', echo=TRUE)
write.csv(dat.final, file="outputFinal.csv")
source('~/.active-rstudio-document', echo=TRUE)
source('//ender/CTF Drive/mhe13/My Documents/R/Comp652FinalProj/dataprep.R', echo=TRUE)
source('~/R/Comp652FinalProj/dataprep.R', echo=TRUE)
p
dat.final <- data.frame(apply(dat.final, 2, function(x) {x[is.character(x)] <- -1; x}))
View(dat.final)
dat.final <- data.frame(apply(red.dat.ind, 2, function(x) {x[is.na(x)] <- -1; x}))
View(dat.final)
dat.final <- data.frame(apply(dat.final, 2, function(x) {x[is.character(x)] <- -1; x}))
View(dat.final)
dat.final <- data.frame(apply(red.dat.ind, 2, function(x) {x[is.na(x)] <- -1; x}))
View(dat.final)
